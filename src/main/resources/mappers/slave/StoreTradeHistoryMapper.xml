<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guoanshequ.dc.das.dao.slave.StoreTradeHistoryMapper">

	<!-- 每日以门店为单位统计order_daily表中交易额 -->
	<select id="queryStoreTradesHistory" parameterType="java.util.Map" resultType="java.util.Map">
        <![CDATA[
			select tor.store_id as platformid,
			ts.code as storeno,
			ts.`name` as storename,
			sum(trading_price) as order_amount,
			count(1) as order_count
			from df_order_signed_daily tor 
			left join t_store ts on (tor.store_id = ts.id)
			where tor.df_signed_time >= #{begindate} and tor.df_signed_time <= #{enddate}
			group by tor.store_id 
		]]>
	</select>
	
	<!-- 运营数据统计2018年以前，门店历史运营营业额，规则去组合订单+去退货 -->
	<select id="queryDsOpeGmvStoreHistory" parameterType="java.util.Map" resultType="java.util.Map">
        <![CDATA[
			SELECT 
			ts.city_code as city_code,
		    a.`name` as city_name,
		    ts.`name` AS store_name,
		    ts.id  AS platformid,
		    ts.code AS storeno,
			(IFNULL(t0.totalprice,0.00) + IFNULL(t1.totalprice,0.00) - IFNULL(t3.returned_amount,0.00)) AS order_amount,
		    (IFNULL(t0.totalprice,0.00) + IFNULL(t1.totalprice,0.00)) AS gmv_price,
		    (IFNULL(t0.ordercount,0) + IFNULL(t1.ordercount,0)) AS order_count,
		    IFNULL(t3.returned_amount,0.00) AS returned_amount,
		    IFNULL(t3.returned_count,0) AS returned_count
		FROM t_store ts
		LEFT JOIN  t_sys_area a on ts.city_code = a.code and a.level = 2
		LEFT JOIN
		    (
		        SELECT  
		            tt.store_id,
		            SUM(IFNULL(tt.price,0.00)) AS totalprice,
		            COUNT(tt.group_id) AS ordercount
		        FROM 
		            (
		                SELECT DISTINCT
		                	tor.id,
		                    tor.store_id,
		                    IFNULL(IF(tor.is_split='yes',tor.trading_price/tog.order_quantity,tor.trading_price),0.0) AS price,
		                    tor.group_id AS group_id
		                FROM t_eshop te
		            	JOIN t_ed_sys_role tesr ON (
							tesr.id=te.department_id and
							tesr.role_name like '%洗衣%'
						)                
		                JOIN t_order tor ON ( tor.eshop_id=te.id )
		                JOIN t_order_group  tog ON  tog.id=tor.group_id
		                JOIN t_order_receipts trp ON (
		                    trp.eshop_id = te.id and 
		                    trp.order_group_id = tor.group_id  and 
		                    trp.`status` =0 and 
		                    trp.type='order' and 
		                    trp.pay_status= 'payed' and 
		                    (trp.pay_platform !='prepay' or trp.pay_platform is null)
		                )
		                WHERE te.`name` NOT LIKE '%测试%' AND te.white!='QA' and tor.sign_time >='2015-12-25' and tor.sign_time <='2018-01-01'
		            ) tt
		        GROUP BY tt.store_id
		    ) t0 ON ts.id=t0.store_id
		LEFT JOIN
		    (
		        SELECT 
		            tt.store_id,
		            SUM(IFNULL(tt.price,0.00)) AS totalprice,
		            COUNT(tt.group_id) AS ordercount
		        FROM 
		            (
		                SELECT DISTINCT
		                	tor.id,
		                    tor.store_id,
		                    IFNULL(IF(tor.is_split='yes',tor.trading_price/tog.order_quantity,tor.trading_price),0.0) AS price,
		                    tor.group_id AS group_id
		                FROM t_eshop te
		            	JOIN t_ed_sys_role tesr ON (
							tesr.id=te.department_id and
							tesr.role_name not like '%洗衣%'
						)                 
		                JOIN t_order tor ON ( tor.eshop_id=te.id )
		                JOIN t_order_group  tog ON  tog.id=tor.group_id
		                WHERE te.`name` NOT LIKE '%测试%' AND te.white!='QA' and tor.sign_time >='2015-12-25' and tor.sign_time <='2018-01-01'
		            ) tt
		        GROUP BY tt.store_id
		    ) t1 ON ts.id=t1.store_id
		LEFT JOIN
		    (
		        SELECT
		            t.store_id,
		            SUM(IFNULL(toref.price,0.00)) AS returned_amount,
		            COUNT(DISTINCT t.group_id)  AS returned_count
		        FROM t_order_refund toref
		        JOIN
		            (
		                SELECT tor.store_id, tor.group_id
		                FROM t_order_returned toret
		                JOIN t_eshop te ON ( te.id=toret.eshop_id
		                    AND te.white!='QA' AND te.name NOT LIKE '%测试%' )
		                JOIN t_order tor ON toret.order_id=tor.id
		                WHERE toret.returned_status='done'
		                    AND toret.create_time>='2015-12-25'
		                    AND toret.create_time<'2018-01-01'
		                GROUP BY tor.group_id
		            ) t ON toref.order_group_id=t.group_id
		        WHERE toref.refund_status='refunded'
		        GROUP BY t.store_id
		    ) t3 ON ts.id=t3.store_id
		WHERE ts.white!='QA' AND ts.`status`=0 AND ts.`name` NOT LIKE '%测试%' ;
		]]>
	</select>
	
	
</mapper>