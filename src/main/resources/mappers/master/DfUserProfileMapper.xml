<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guoanshequ.dc.das.dao.master.DfUserProfileMapper">

	<insert id="addDfUserProfile" parameterType="java.util.Map" >
		<![CDATA[
			insert into df_user_profile(
				customer_id,trading_price_sum,order_count,trading_price_max,first_order_time,first_order_sn,
				last_order_time,customer_name,customer_phone,regist_time,area_code,tiny_village_code,storeno,
				dep_name,channel_name,user_model,customer_source,idcard
			) 
			values (
				#{customer_id},#{trading_price_sum},#{order_count},#{trading_price_max},#{first_order_time},#{first_order_sn},
				#{last_order_time},#{customer_name},#{customer_phone},#{regist_time},#{area_code},#{tiny_village_code},#{storeno},
				#{dep_name},#{channel_name},#{user_model},#{customer_source},#{idcard}
			)on duplicate key update trading_price_sum = trading_price_sum + values(trading_price_sum),
				order_count = order_count + values(order_count),
				last_order_time = values(last_order_time),
				update_time = now(),
				trading_price_max = if(trading_price_max > values(trading_price_max),trading_price_max,values(trading_price_max)),
				idcard = values(idcard)
        ]]>
	</insert>
	
	<select id="isExistCusDraw" parameterType="java.lang.String" resultType="java.lang.Integer">
		<![CDATA[
			select count(1) from df_user_tag where mobilephone =#{customer_phone}
		]]>
	</select>
	
	<insert id="addName" parameterType="com.guoanshequ.dc.das.model.Customer">
		insert into tmp_cusname(id,name) values (#{id},#{name}) 
	</insert>
	
	<insert id="addDfUserStore" parameterType="java.util.Map" >
		<![CDATA[
			insert ignore into df_user_store(
				customer_id,store_id,city_name,cityno,storeno,customer_phone,order_sn,area_code,tiny_village_code,
				employee_a_no,latitude,longitude,first_order_time
			) 
			values (
				#{customer_id},#{store_id},#{city_name},#{cityno},#{storeno},#{customer_phone},#{order_sn},#{area_code},#{tiny_village_code},
				#{employee_a_no},#{latitude},#{longitude},#{first_order_time}
			)
        ]]>
	</insert>	
	
	<insert id="addUserTag" parameterType="java.util.Map" >
		<![CDATA[
			insert ignore into df_userprofile_tag (customer_id,usertag) values (#{customer_id},#{usertag})
        ]]>
	</insert>
	
	<select id="isExistCustomer" parameterType="java.util.Map" resultType="java.util.Map">
		<![CDATA[
			select customer_phone,idcard from df_user_profile where customer_phone =#{customer_phone}
		]]>
	</select>
	
	<insert id="addYlcUser" parameterType="java.util.Map" >
		<![CDATA[
			insert into df_user_profile(
				customer_id,customer_name,customer_phone,regist_time,storeno,idcard,channel_name,system_flag
			) 
			values (
				#{customer_id},#{customer_name},#{customer_phone},#{regist_time},#{storeno},
				#{idcard},#{channel_name},#{system_flag}
			)
        ]]>
	</insert>
	
	<update id="updateYlcUser" parameterType="java.util.Map">
	<![CDATA[
		update df_user_profile set idcard=#{idcard} where customer_phone =#{customer_phone}
	]]>
	</update>
	
	<select id="queryYlcIdcardByPhone" parameterType="java.lang.String" resultType="java.lang.String">
		<![CDATA[
			select idcard from df_user_profile where customer_phone =#{customer_phone} and system_flag='SYS002' limit 1 
		]]>
	</select>
	
	<select id="deleteYlcIdcardByPhone" >
		<![CDATA[
			delete from df_user_profile where customer_phone =#{customer_phone} and system_flag='SYS002' 
		]]>
	</select>

</mapper>