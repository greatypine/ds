<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guoanshequ.dc.das.dao.master.DepartmentBizMapper">


	
	<delete id="deleteDeptGmvByYearMonth" parameterType="java.util.Map">
		<![CDATA[
			delete from ds_pes_gmv_storedept_month where year =#{year} and month =#{month}
		]]>
	</delete>
	
	<delete id="deleteDeptCusByYearMonth" parameterType="java.util.Map">
		<![CDATA[
			delete from ds_pes_customer_storedept_month where year =#{year} and month =#{month}
		]]>
	</delete>	
	
	<insert id="addDeptGmvByMassOrder" parameterType="java.util.Map">
		<![CDATA[
			insert into ds_pes_gmv_storedept_month (
			 cityname,platformid,storeno,storename,deptid,deptname,pesgmv,deptgmv,thgmv,year,month
			)
			select 
				deptgmv.cityname,
				deptgmv.platformid,
				deptgmv.storeno,
				deptgmv.storename,
				deptgmv.deptid,
				deptgmv.deptname,
			    (IFNULL(deptgmv.gmv_price,0) - IFNULL(deptthgmv.thgmv_price,0)) as pesgmv,
				IFNULL(deptgmv.gmv_price,0) as deptgmv,
				IFNULL(deptthgmv.thgmv_price,0) as thgmv,
				YEAR(date_sub(now(),interval 1 day)),
				MONTH(date_sub(now(),interval 1 day))
			from (
				select 
				store_city_name as cityname,
				store_id as platformid,
				store_code as storeno,
				store_name as storename,
				bussiness_group_id as deptid,
				department_name as deptname,
				sum(gmv_price) as gmv_price 
				from df_mass_order_monthly tor 
				where tor.sign_time >=#{begindate} 
				and tor.sign_time < DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY)
				and (tor.eshop_name NOT LIKE '%测试%' AND tor.eshop_white!='QA')
				and (tor.store_white !='QA' and tor.store_status = 0 )
				and (tor.loan_label ='0' or tor.loan_label ='3' or tor.loan_label = '5')
				and (tor.abnormal_label ='0' AND tor.pubseas_label ='0')
				group by store_id,bussiness_group_id 
			) deptgmv left join (
				select
				store_id as platformid,
				bussiness_group_id as deptid,
				sum(returned_amount) as thgmv_price
				from df_mass_order_total tor
				where tor.eshop_name NOT LIKE '%测试%' AND tor.eshop_white!='QA'
				AND tor.store_white !='QA' and tor.store_status = 0
				AND (tor.loan_label ='0' or tor.loan_label ='3' or tor.loan_label = '5')
				AND (tor.abnormal_label ='0' AND tor.pubseas_label ='0')
				AND tor.return_time >= #{begindate}
				AND tor.return_time < DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY)
				group by store_id,bussiness_group_id
			) deptthgmv on (deptgmv.platformid = deptthgmv.platformid and deptgmv.deptid = deptthgmv.deptid) 
		]]>
	</insert>
	
	
<!-- 	<insert id="addDeptCusByMassOrder" parameterType="java.util.Map"> -->
<!-- 		<![CDATA[ -->
<!-- 			insert into ds_deptcus ( -->
<!-- 				cityname,platformid,storeno,storename,deptid,deptname,cusnum,year,month -->
<!-- 			) -->
<!-- 			select  -->
<!-- 			store_city_name as cityname, -->
<!-- 			store_id as platformid, -->
<!-- 			store_code as storeno, -->
<!-- 			store_name as storename, -->
<!-- 			bussiness_group_id as deptid, -->
<!-- 			department_name as deptname, -->
<!-- 			count(distinct customer_id) as cusnum, -->
<!-- 			YEAR(date_sub(now(),interval 1 day)), -->
<!-- 			MONTH(date_sub(now(),interval 1 day)) -->
<!-- 			from df_mass_order_monthly tor -->
<!-- 			where tor.sign_time >=#{begindate}  -->
<!-- 			and tor.sign_time <DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY) -->
<!-- 			and (tor.eshop_name NOT LIKE '%测试%' AND tor.eshop_white!='QA') -->
<!-- 			and (tor.store_white !='QA' and tor.store_status = 0) -->
<!-- 			group by store_id,bussiness_group_id  -->
<!-- 		]]> -->
<!-- 	</insert> -->
	
	
	
		<insert id="addDeptCusByMassOrder" parameterType="java.util.Map">
		<![CDATA[
			insert into ds_pes_customer_storedept_month (
				cityname,platformid,storeno,storename,deptid,deptname,cusnum,cusnum_ten,year,month
			)
			SELECT c.cityname,c.platformid,c.storeno,c.storename,c.deptid,c.deptname,c.cusnum,b.total_ten,c.cur_year,c.cur_month FROM 
			(select 
			store_city_name as cityname,
			store_id as platformid,
			store_code as storeno,
			store_name as storename,
			bussiness_group_id as deptid,
			department_name as deptname,
			count(distinct customer_id) as cusnum,
			YEAR(date_sub(now(),interval 1 day)) cur_year,
			MONTH(date_sub(now(),interval 1 day)) cur_month
			from df_mass_order_monthly tor
			where tor.sign_time >=#{begindate} 
			and tor.sign_time <DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY)
			and (tor.eshop_name NOT LIKE '%测试%' AND tor.eshop_white!='QA')
			and (tor.store_white !='QA' and tor.store_status = 0)
			group by store_id,bussiness_group_id) c
			LEFT JOIN 
			(select platformid,storeno,deptid,sum(case when a.monetary > 10 then 1 else 0 end ) as total_ten  from (select 
			store_id as platformid,
			store_code as storeno,
			bussiness_group_id as deptid,
			sum(IFNULL(tor.gmv_price,0)) as monetary,
			YEAR(date_sub(now(),interval 1 day)),
			MONTH(date_sub(now(),interval 1 day))
			from df_mass_order_monthly tor
			where tor.sign_time >=#{begindate}  
 			and tor.sign_time <DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY) 
			and (tor.eshop_name NOT LIKE '%测试%' AND tor.eshop_white!='QA')
			and (tor.store_white !='QA' and tor.store_status = 0)
			group by store_id,bussiness_group_id,customer_id) a group by platformid,deptid) b on c.platformid = b.platformid and b.deptid = c.deptid 
		]]>
	</insert>
	
		
</mapper>