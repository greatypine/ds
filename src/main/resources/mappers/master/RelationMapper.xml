<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guoanshequ.dc.das.dao.master.RelationMapper">

	<!-- PES系统：与平台数据卡相对应sql，人员是实时人员 -->
	<select id="queryRelations" parameterType="java.util.Map" resultType="java.util.Map">
        <![CDATA[
        	SELECT employee_no as employeeno,num FROM (
			SELECT  t.store_id,t.employee_no, SUM(t.curr_month_amount) AS num 
			FROM (SELECT 	empamou.store_id,  empamou.employee_no, empamou.employee_name, empamou.data_amount AS curr_month_amount 
			      FROM (  SELECT u.store_id, r.employee_name, r.employee_no, DATE_FORMAT(r.relation_date,'%Y-%m') AS mounth,
			              COUNT(distinct c.id) AS data_amount 
			            FROM t_relation r     
			            LEFT JOIN tb_bizbase_user u  ON u.employeeId = r.employee_no 
			            LEFT JOIN t_customer c  ON c.id=r.customer_id 
			            WHERE r.status = 0 AND DATE_FORMAT(r.relation_date,'%Y-%m') = #{yearmonth}
			            GROUP BY r.employee_no) empamou ) t 
			GROUP BY  t.employee_no HAVING t.store_id is not NULL 
			ORDER BY t.store_id,t.employee_no ) st_relation
		]]>
		 <where>
            <if test="null != employeeno and null != employeeno">
               <![CDATA[                   
                   employee_no = #{employeeno}
               ]]>
            </if>
         </where>
	</select>
	
	<!-- PES系统：以门店为单位统计总数，实时数据 -->
 	<select id="queryRelationsByStore" parameterType="java.util.Map" resultType="java.util.Map">
        <![CDATA[
			SELECT storeid,storename,storeno,num  FROM (
			SELECT t_store.store_id as storeid,t_store.name as storename ,t_store.storeno,sum(num) as num FROM (
			SELECT  t.store_id,t.employee_no, SUM(t.curr_month_amount) AS num  
			FROM (SELECT 	empamou.store_id,  empamou.employee_no, empamou.employee_name, empamou.data_amount AS curr_month_amount 
			      FROM (  SELECT u.store_id, r.employee_name, r.employee_no, DATE_FORMAT(r.relation_date,'%Y-%m') AS mounth,
			              COUNT(distinct c.id) AS data_amount 
			            FROM t_relation r     
			            LEFT JOIN tb_bizbase_user u  ON u.employeeId = r.employee_no 
			            LEFT JOIN t_customer c  ON c.id=r.customer_id 
			            WHERE r.status = 0 AND DATE_FORMAT(r.relation_date,'%Y-%m') = #{yearmonth}
			            GROUP BY r.employee_no) empamou ) t 
			GROUP BY  t.employee_no HAVING t.store_id is not NULL 
			ORDER BY t.store_id,t.employee_no) aa ,t_store
			WHERE aa.store_id = t_store.store_id
			GROUP by t_store.store_id ) relationtmp
		]]>
		<where>
		  <if test="null != storeid and null != storeid">
	         <![CDATA[                   
	             storeid = #{storeid}
	         ]]>
	      </if>
       </where>	
	</select> 
	
	
	<!-- 社区动态以日期为单位进行查询，以门店为单位统计总数，实时数据 -->
 	<select id="queryRelationsStoreByDay" parameterType="java.util.Map" resultType="java.util.Map">
        <![CDATA[
			SELECT storeid,storename,num  FROM (
			SELECT t_store.store_id as storeid,t_store.name as storename ,t_store.storeno,sum(num) as num FROM (
			SELECT  t.store_id,t.employee_no, SUM(t.curr_month_amount) AS num  
			FROM (SELECT 	empamou.store_id,  empamou.employee_no, empamou.employee_name, empamou.data_amount AS curr_month_amount 
			      FROM (  SELECT u.store_id, r.employee_name, r.employee_no, DATE_FORMAT(r.relation_date,'%Y-%m') AS mounth,
			              COUNT(distinct c.id) AS data_amount 
			            FROM t_relation r     
			            LEFT JOIN tb_bizbase_user u  ON u.employeeId = r.employee_no 
			            LEFT JOIN t_customer c  ON c.id=r.customer_id 
			            WHERE r.status = 0 
			            AND r.relation_date>=#{begindate} 
			            AND r.relation_date<DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY)
			            GROUP BY r.employee_no) empamou ) t 
			GROUP BY  t.employee_no HAVING t.store_id is not NULL 
			ORDER BY t.store_id,t.employee_no) aa ,t_store
			WHERE aa.store_id = t_store.store_id
			GROUP by t_store.store_id ) relationtmp
			WHERE storeid IN (${storeids})
			ORDER BY num desc
			LIMIT ${limitcond}
		]]>
	</select> 
	
</mapper>