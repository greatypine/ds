<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guoanshequ.dc.das.dao.master.DsOpeGmvStoreMapper">


	<delete id="deleteByYearMonth" parameterType="java.util.Map">
		<![CDATA[
			delete from ${tableName} where year =#{year} and month =#{month}
		]]>
	</delete>
	
	<insert id="addDsOpeGmvStoreMonthByMassOrder" parameterType="java.util.Map">
		<![CDATA[
			insert into ds_ope_gmv_store_month (
				storeno,platformid,store_name,city_name,order_amount,gmv_amount,
				returned_amount,order_count,returned_count,year,month
			) 
			select 
				ts.storeno as storeno ,
				ts.platformid as platformid,
				ts.name as store_name,
				ts.city_name as city_name,
				(IFNULL(ordergmv.gmv_price,0) - IFNULL(orderthgmv.returned_amount,0)) as order_amount,
				IFNULL(ordergmv.gmv_price,0) as gmv_amount,
				IFNULL(orderthgmv.returned_amount,0) as returned_amount,
				IFNULL(order_count,0) as order_count,
				IFNULL(returned_count,0) as returned_count,
				YEAR(date_sub(now(),interval 1 day)) as year ,
				MONTH(date_sub(now(),interval 1 day)) as month
			from t_store ts
			left join (
				select
				tor.store_code as storeno,
				tor.store_id ,	
				tor.store_name as store_name,
				sum(tor.gmv_price) as gmv_price, 
				count(tor.id) as order_count
				from df_mass_order_monthly tor
				where tor.eshop_name NOT LIKE '%测试%' AND tor.eshop_white!='QA'
				AND tor.store_white !='QA' and tor.store_status = 0
				AND tor.sign_time >=#{begindate}
				AND tor.sign_time <DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY)
				group by store_id	
			) ordergmv on (ts.platformid = ordergmv.store_id)
			left join (
				select
				store_id ,
				sum(returned_amount) as returned_amount,
				count(tor.id) as returned_count
				from df_mass_order_total tor
				where tor.eshop_name NOT LIKE '%测试%' AND tor.eshop_white!='QA'
				AND tor.store_white !='QA' and tor.store_status = 0
				AND tor.return_time >= #{begindate}
				AND tor.return_time < DATE_ADD(DATE(#{enddate}), INTERVAL 1 DAY)
				group by store_id 
			) orderthgmv on (ts.platformid = orderthgmv.store_id)
			where ts.`name` not like '%测试%'  and ts.platformid is not null 
		]]>
	</insert>

</mapper>